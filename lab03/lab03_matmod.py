#!/usr/bin/env python
# coding: utf-8

# In[1]:


STUD = 1032182533
def variant(stud):
    print("Вариант: {}".format(stud%70+1))
variant(STUD)


# Между страной Х и страной У идет война. Численность состава войск исчисляется от начала войны, и являются временными функциями
# $x(t)$ и $y(t)$. В начальный момент времени страна Х имеет армию численностью 87 700 человек, а в распоряжении страны У армия численностью в 91 400 человек. Для упрощения модели считаем, что коэффициенты $a,b,c,h$ постоянны. Также считаем $P(t)$ и $Q(t)$ непрерывные функции.
# 
# Постройте графики изменения численности войск армии Х и армии У для следующих случаев:
# 
# 
# 1. Модель боевых действий между регулярными войсками
# 
# $$ \frac{\partial x}{\partial t} = -0.354x(t) - 0.765y(t) + |sin(t+10)|$$
# $$ \frac{\partial y}{\partial t} = -0.679x(t) - 0.845y(t) + |cos(t+15)|$$
# 
# 2. Модель ведение боевых действий с участием регулярных войск и партизанских отрядов:
# 
# $$ \frac{\partial x}{\partial t} = -0.505x(t) - 0.77y(t) + sin(2t) + 2$$
# $$ \frac{\partial y}{\partial t} = -0.6x(t)y(t) - 0.404y(t) + cos(5t) + 2$$

# In[2]:


import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt


# In[3]:


# Начальные условия
x0 = 87700 # Численность армии Х
y0 = 91400 # Численность армии Y
t0 = 0 # Начальный момент времени
tmax = 1 # Предельный момент времени
dt = 0.05 # Шаг изменения времени
t = np.arange(t0, tmax, dt) 

# Между регулярными войсками:
a1 = 0.354 # Степень влияния различных факторов на потери
b1 = 0.765 # Эффективность боевых действий со стороны Y
c1 = 0.679 # Эффективность боевых действий со стороны X
h1 = 0.845 # Степень влияния различных факторов на потери

# С участием регулярных войск и партизанских отрядов:
a2 = 0.505 # Степень влияния различных факторов на потери
b2 = 0.77 # Эффективность боевых действий со стороны Y
c2 = 0.6 # Эффективность боевых действий со стороны X
h2 = 0.404 # Степень влияния различных факторов на потери


# In[4]:


# Между регулярными войсками
def P1(t): # Возможность подхода подкрепления к войскам X в течение одного дня
    p1 = abs(np.sin(t+10))
    return p1
def Q1(t): # Возможность подхода подкрепления к войскам Y в течение одного дня
    q1 = abs(np.cos(t+15))
    return q1

# С участием регулярных войск и партизанских отрядов
def P2(t): # Возможность подхода подкрепления к войскам X в течение одного дня
    p2 = np.sin(2*t) + 2
    return p2
def Q2(t): # Возможность подхода подкрепления к войскам Y в течение одного дня
    q2 = np.cos(5*t) + 2
    return q2


# In[5]:


# Система дифференциальных уравнений

# Между регулярными войсками
def S1(f, t):
    s11 = -a1*f[0] - b1*f[1] + P1(t) # Изменение численности первой армии
    s12 = -c1*f[0] - h1*f[1] + Q1(t) # Изменение численности второй армии
    return s11, s12

# С участием регулярных войск и партизанских отрядов
def S2(f, t):
    s21 = -a2*f[0] - b2*f[1] + P2(t)
    s22 = -c2*f[0]*f[1] - h2*f[1] + Q2(t)
    return s21, s22


# In[6]:


v = np.array([x0, y0]) # Вектор начальных условий

# Решения системы
f1 = odeint(S1, v, t) # Между регулярными войсками
f2 = odeint(S2, v, t) # С участием регулярных войск и партизанских отрядов


# In[9]:


plt.plot(t, f1)
plt.title('Модель боевых действий №1')
plt.ylabel('Численность армии')
plt.xlabel('Время')
plt.legend(['Армия X', 'Армия Y'])


# In[10]:


plt.plot(t, f2)
plt.title('Модель боевых действий №2')
plt.ylabel('Численность армии')
plt.xlabel('Время')
plt.legend(['Армия X (рег)', 'Армия Y (парт)'])


# In[ ]:




